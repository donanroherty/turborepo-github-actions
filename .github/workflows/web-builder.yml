name: Build and Push

on:
  pull_request:
    branches: [main]
  push:
    branches:
      - main
    tags:
      - 'v*'

jobs:
  build_and_push:
    runs-on: ubuntu-20.04

    strategy:
      matrix:
        node-version: [20]

    permissions:
      contents: read
      packages: write

    steps:
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Cache pnpm dependencies
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Run linting
        run: pnpm run lint

      # - name: Run tests
      #   run: pnpm test

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and Push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./DOCKERFILE.web
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/turborepo-github-actons:${{ github.sha }}
            ghcr.io/${{ github.repository_owner }}/turborepo-github-actons:${{ github.event.pull_request.head.ref || github.event.release.tag_name || 'latest' }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
      

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Set output
        id: vars
        run: echo "::set-output name=image::ghcr.io/${{ github.repository }}:${{ github.event.pull_request.head.ref || github.event.release.tag_name || github.sha }}"
        
